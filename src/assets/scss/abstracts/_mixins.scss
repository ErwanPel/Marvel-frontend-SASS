// This file regroup all the mixins used in the project
// The mixins are classes which contains CSS properties
// and can get arguments in paranthesis area. They are
// instantiated with @include

@use "variables" as *;
@use "placeholders" as *;
@use "breakpoints" as *;
@use "animations" as *;

@mixin absolute-element($top, $left) {
  position: absolute;
  top: $top;
  left: $left;
}

@mixin flex-center($direction: row) {
  flex-direction: $direction;
  display: flex !important;
  justify-content: center;
  align-items: center;
}

@mixin flex-around($direction: row) {
  flex-direction: $direction;
  display: flex !important;
  justify-content: space-around;
  align-items: center;
}

@mixin flex-between($direction: row) {
  flex-direction: $direction;
  display: flex !important;
  justify-content: space-between;
  align-items: center;
}

//This mixin write text in one line and add ellipsis at the end
@mixin ellipsis-line {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

// This mixin is used in the header and the search bar for
// the drop-down menu (user menu and the autocomplete research bar)
@mixin item-menu {
  border: 1px solid rgb(153, 65, 65);
  background-color: $background-site;
  padding: 1.2rem;
  text-align: center;
  font-size: 1.6rem;
  line-height: 1.79rem;
  height: fit-content;
  @include ellipsis-line;

  @include responsive-screen("small") {
    padding: 1.2rem;
  }

  &:hover {
    background-color: rgb(141, 92, 92);
    cursor: pointer;
  }

  &:focus {
    background-color: rgb(141, 92, 92);
    border: 1px solid $white-color;
  }
}

@mixin max-bloc-text-size($line-heigth, $number-line) {
  line-height: $line-heigth;
  max-height: calc($line-heigth * $number-line);
  overflow: hidden;
}

// This mixin change the color of the favorite item if the
// click on for favorite or not.
// If modal is on screen, this mixin transform the favorite
// color in transparency
@mixin favorite-item($background, $color: black) {
  z-index: 1;
  @include flex-center(row);
  border: 1px solid black;
  height: 3rem;
  width: 3rem;
  border-radius: 50%;
  color: $color;
  background-color: $background;

  @if $background == $white-color {
    animation: little-fav 2s ease-in-out;
  } @else if $background == $main-color {
    transition: background-color 1s;
  }

  &:hover {
    cursor: pointer;
  }
}

@mixin darker-c($-color, $-lightness) {
  color: scale-color($color: $-color, $lightness: $-lightness);
}
